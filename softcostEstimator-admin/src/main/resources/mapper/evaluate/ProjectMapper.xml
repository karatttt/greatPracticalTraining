<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.softcostEstimator.evaluate.mapper.ProjectMapper">
    
    <resultMap type="Project" id="ProjectResult">
        <result property="projectID"    column="projectID"    />
        <result property="name"    column="name"    />
        <result property="requireContent"    column="require_content"    />
        <result property="createTime"    column="createTime"    />
        <result property="endTime"    column="endTime"    />
        <result property="appraiserID"    column="appraiserID"    />
        <result property="auditorID"    column="auditorID"    />
        <result property="tenantryID"    column="tenantryID"    />
        <result property="description"    column="description"    />
    </resultMap>

    <sql id="selectProjectVo">
        select projectID, name, require_content, createTime, endTime, appraiserID, auditorID, tenantryID, description from project
    </sql>

    <select id="selectProjectList" parameterType="Project" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="requireContent != null  and requireContent != ''"> and require_content = #{requireContent}</if>
            <if test="createTime != null "> and createTime = #{createTime}</if>
            <if test="endTime != null "> and endTime = #{endTime}</if>
            <if test="appraiserID != null "> and appraiserID = #{appraiserID}</if>
            <if test="auditorID != null "> and auditorID = #{auditorID}</if>
            <if test="tenantryID != null "> and tenantryID = #{tenantryID}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
        </where>
    </select>
    
    <select id="selectProjectByProjectID" parameterType="Long" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        where projectID = #{projectID}
    </select>

    <insert id="insertProject" parameterType="Project" useGeneratedKeys="true" keyProperty="projectID">
        insert into project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="requireContent != null">require_content,</if>
            <if test="createTime != null">createTime,</if>
            <if test="endTime != null">endTime,</if>
            <if test="appraiserID != null">appraiserID,</if>
            <if test="auditorID != null">auditorID,</if>
            <if test="tenantryID != null">tenantryID,</if>
            <if test="description != null">description,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="requireContent != null">#{requireContent},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="appraiserID != null">#{appraiserID},</if>
            <if test="auditorID != null">#{auditorID},</if>
            <if test="tenantryID != null">#{tenantryID},</if>
            <if test="description != null">#{description},</if>
         </trim>
    </insert>

    <update id="updateProject" parameterType="Project">
        update project
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="requireContent != null">require_content = #{requireContent},</if>
            <if test="createTime != null">createTime = #{createTime},</if>
            <if test="endTime != null">endTime = #{endTime},</if>
            <if test="appraiserID != null">appraiserID = #{appraiserID},</if>
            <if test="auditorID != null">auditorID = #{auditorID},</if>
            <if test="tenantryID != null">tenantryID = #{tenantryID},</if>
            <if test="description != null">description = #{description},</if>
        </trim>
        where projectID = #{projectID}
    </update>

    <delete id="deleteProjectByProjectID" parameterType="Long">
        delete from project where projectID = #{projectID}
    </delete>

    <delete id="deleteProjectByProjectIDs" parameterType="String">
        delete from project where projectID in 
        <foreach item="projectID" collection="array" open="(" separator="," close=")">
            #{projectID}
        </foreach>
    </delete>
</mapper>